name: Build - Python Docker based Service and run Sonar Checks.

on:
  workflow_call:
    inputs:
      envs:
        default: ''
        required: false
        type: string
      install:
        default: ''
        required: false
        type: string
    secrets:
      helper_token:
        required: true
      sonar_token:
        required: true
      cache_aws_key_id:
        required: true
      cache_aws_key:
        required: true
      aws_key_id:
        required: true
      aws_key:
        required: true
      aws_account:
        required: true
      slack_token:
        required: true
      maxmind:
        required: false

jobs:
  test_actions:
    if: |
      (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
    runs-on: ubuntu-20.04
    name: Build, Test, Sonar, Publish
    env:
      is_reco: ${{ secrets.maxmind }}
      TERM: xterm-256color
      FORCE_COLOR: 2
      DOCKER_BUILDKIT: 1
    steps:
      - name: Set Env Vars
        run: |
          IFS=', ' read -r -a array <<< "${{ inputs.envs }}"
          for str in "${array[@]}"; do
            echo "${str}" >> $GITHUB_ENV
          done
        shell: bash
      - name: Getting Build-Helper Tag
        run: |
          echo "HELPER_VERSION=$(git ls-remote --tags https://${{secrets.helper_token}}@github.com/Woosmap/build-helper.git | awk '{print $2}' | grep 'refs/tags/v5.*' | sort -nr | head -n 1)" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/checkout@v2
        with:
          repository: Woosmap/build-helper
          ref: ${{ env.HELPER_VERSION }}
          token: ${{ secrets.helper_token }}
          path: helper
          fetch-depth: 1
      - name: Login to AWS ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.aws_account }}.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.aws_key_id }}
          password: ${{ secrets.aws_key }}
      - name: Install Bender
        run: |
          pip install --extra-index-url https://pypi.fury.io/Pfii9sZDGkGXEhXEmStx/webgeoservices/ "bender==0.5.*"
      - name: Install Required Packages
        if: ${{ inputs.install }} != ''
        run: |
          sudo apt install --no-install-recommends --yes ${{ inputs.install }}
      - name: Download GeoIP (maxmind) DB (for woosmapreco)
        if: ${{ env.is_reco }}
        run: |
          ./download_geoip_database.sh
        env:
          MAXMIND: ${{ secrets.maxmind }}
      - name: Bender Build
        uses: ./helper/.github/actions/builder
      - name: Remove GeoIP (maxmind) DB (for woosmapreco)
        if: ${{ env.is_reco }}
        run: rm GeoIP2-City.mmdb
      - name: Bender Test
        uses: ./helper/.github/actions/run_tests
      - name: Cache code coverage
        uses: ./helper/.github/actions/cache
        with:
          path: './coverage/coverage.xml'
          key: 'coverage'
          cache_aws_key_id: ${{ secrets.cache_aws_key_id }}
          cache_aws_key: ${{ secrets.cache_aws_key }}
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.helper_token }}
          SONAR_TOKEN: ${{ secrets.sonar_token}}
      - name: Publish
        uses: ./helper/.github/actions/publish
